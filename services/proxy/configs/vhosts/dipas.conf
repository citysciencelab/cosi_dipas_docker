# vim:syntax=nginx

server {
  listen 80;
  listen [::]:80;
  server_name dipas.unitac.local;

  # Apache Config to Nginx
  #root /var/www

  # This is the internal DNS of Docker
  resolver 127.0.0.11;

  # Some default options for all requests
  client_max_body_size 32m;
  proxy_pass_request_headers on;

  location /check {
    add_header Content-Type text/plain;
    return 200 'gateway works (dipas)';
  }

  location / {
    proxy_pass http://dipas_frontend:8080$request_uri;
  }

  location /drupal  {
    set $my_host        "dipas.unitac.local:3000";

    proxy_pass_request_headers  on;
    proxy_pass                  http://dipas_backend:80$request_uri;
    proxy_redirect              off;
    proxy_set_header            Host $my_host;
    proxy_set_header            X-Real-IP $remote_addr;
    proxy_set_header            X-Forwarded-For $proxy_add_x_forwarded_for;

    #TODO needs a more flexibel way
    #rewrite /drupal/dipas/([a-z0-9]+)/([a-z0-9]*[\/|a-z].*) /drupal/dipas/$2;
  }

  #location ^/(.*\.php(/.*)?)$ {
  #  proxy_pass_request_headers  on;
  #  proxy_pass fcgi://php:9000/app/$1;
  #  proxy_redirect     off;
  #  proxy_set_header   X-Real-IP $remote_addr;
  #  proxy_set_header   X-Forwarded-For $proxy_add_x_forwarded_for;
  #}
}

server {
  listen 80;
  listen [::]:80;
  server_name ~^(.*)\.dipas\.unitac\.local$;

  # This is the internal DNS of Docker
  resolver 127.0.0.11;

  # Some default options for all requests
  client_max_body_size 32m;
  proxy_pass_request_headers on;

  location /check {
    add_header Content-Type text/plain;
    return 200 "gateway works (dipas / $1)";
  }

  location / {
    proxy_pass http://$1.dipas_frontend:8080$request_uri;
  }

  location /drupal  {
    set $my_host        "$1.dipas.unitac.local:3000";

    proxy_pass_request_headers  on;
    proxy_pass                  http://dipas_backend:80$request_uri;
    proxy_redirect              off;
    proxy_set_header            Host $my_host;
    proxy_set_header            X-Real-IP $remote_addr;
    proxy_set_header            X-Forwarded-For $proxy_add_x_forwarded_for;
  }
}
